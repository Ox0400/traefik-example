version: "3.3"

services:

  traefik:
    image: "traefik:v2.6"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "2080:80"
      - "28080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - default
      - traefik-net


  web1:
    image: "traefik/whoami"
    networks:
      - default
      - traefik-net

    deploy:
      mode: replicated
      replicas: 2
      labels:
        - "traefik.enable=true"
        - "traefik.port=80"
        - "traefik.http.routers.web1.rule=PathPrefix(`/apps/web1`) || Host(`web1`)"
        - "traefik.http.routers.web1.entrypoints=web"
        - "traefik.http.services.web1.loadbalancer.server.port=80"


        - "traefik.http.routers.web1.middlewares=web1@docker"
        - "traefik.http.middlewares.web1.ratelimit.average=2"
        - "traefik.http.middlewares.web1.ratelimit.period=1m"
        - "traefik.http.middlewares.web1.ratelimit.burst=20"
        #- "traefik.http.middlewares.web1.plugin.inflightreq.amount=10"

  web2:
    image: "traefik/whoami"
    deploy:
      replicas: 2
      labels:
        - "traefik.enable=true"
        #- "traefik.http.routers.web2.rule=Host(`web2`) || Path(`/apps/web2`)"
        - "traefik.http.routers.web2.rule=PathPrefix(`/apps/web2`) || Host(`web2`)"
        - "traefik.http.routers.web2.entrypoints=web"
        - "traefik.http.services.web2.loadbalancer.server.port=80"
    networks:
      - default
      - traefik-net

networks:
  traefik-net:
    external:
      name: traefik-net
